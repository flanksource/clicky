# golangci-lint configuration - Best practices for 2025
# Version: 1.62.0+ compatible

run:
  # Timeout for analysis
  timeout: 5m

  # Include test files
  tests: true

  # Go version to target
  go: "1.23"

# Output configuration
output:
  # Format of the output
  formats:
    - format: colored-line-number
      path: stdout

  # Print lines of code with issue
  print-issued-lines: true

  # Print linter name in the end of issue text
  print-linter-name: true

  # Sort results
  sort-results: true

# Linter settings
linters-settings:
  # Error handling
  errcheck:
    # Check type assertions
    check-type-assertions: true
    # Check for missing error checks in deferred calls
    check-blank: true
    # Exclude functions from checking
    exclude-functions:
      - io.Copy
      - fmt.Printf
      - fmt.Fprintf
      - fmt.Println

  # Go fmt
  gofmt:
    # Simplify code
    simplify: true

  # Go imports
  goimports:
    # Put local imports after 3rd party
    local-prefixes: github.com/flanksource/clicky

  # Go critic - comprehensive linter
  gocritic:
    enabled-tags:
      - diagnostic
      - performance
      - style
      - experimental
    disabled-checks:
      - whyNoLint # Sometimes we need nolint without explanation
      - commentedOutCode # Can be useful during development
      - hugeParam # Not always bad for performance
    settings:
      captLocal:
        paramsOnly: false
      rangeValCopy:
        sizeThreshold: 512
        skipTestFuncs: true

  # Cyclomatic complexity
  gocyclo:
    # Minimal complexity to report
    min-complexity: 30

  # Cognitive complexity
  gocognit:
    # Minimal complexity to report
    min-complexity: 30

  # Duplicate code detection
  dupl:
    # Minimum lines count to detect duplicate
    threshold: 100

  # Go security
  gosec:
    # Enable all rules
    severity: low
    confidence: low
    # Exclude specific rules if needed
    excludes:
      - G104 # Handled by errcheck
      - G107 # URL provided as variable (often needed)
    # Configure specific rules
    config:
      G301: "0750" # File permissions
      G302: "0640" # File creation permissions
      G306: "0640" # WriteFile permissions

  # Magic numbers
  gomnd:
    checks:
      - argument
      - case
      - condition
      - operation
      - return
      - assign
    ignored-numbers:
      - "0"
      - "1"
      - "2"
      - "10"
      - "100"
      - "1000"
    ignored-files:
      - '.*_test\.go$'
    ignored-functions:
      - 'strconv\..*'
      - 'time\..*'

  # Line length
  lll:
    # Max line length
    line-length: 140
    # Tab width in spaces
    tab-width: 1

  # Misspell
  misspell:
    # Locale to use
    locale: US
    # Ignore words
    ignore-words:
      - clicky
      - flanksource

  # Unused parameters
  unparam:
    # Check exported functions
    check-exported: true

  # Nakedret
  nakedret:
    # Max function length to check
    max-func-lines: 30

  # Prealloc
  prealloc:
    # Only simple loops
    simple: true
    # Range loops
    range-loops: true
    # For loops
    for-loops: true

  # Revive - comprehensive linter
  revive:
    # Fail on any issue
    severity: warning
    rules:
      # Performance rules
      - name: time-equal
      - name: string-of-int
      - name: redundant-import-alias
      - name: import-alias-naming
        arguments:
          - "^[a-z][a-z0-9]*$"
      # Style rules
      - name: var-naming
        arguments:
          - ["ID", "URL", "API", "URI", "HTTP", "JSON", "CSV", "YAML", "HTML", "SQL"]
      - name: package-comments
        disabled: true # Not always necessary for internal packages
      - name: exported
        arguments:
          - "checkPrivateReceivers"
          - "sayRepetitiveInsteadOfStutters"
      # Error handling
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: errorf
      # Code clarity
      - name: indent-error-flow
      - name: superfluous-else
      - name: confusing-naming
      - name: get-return
      - name: modifies-parameter
      - name: confusing-results
      - name: deep-exit
      - name: flag-parameter
      - name: unnecessary-stmt
      - name: struct-tag
      - name: modifies-value-receiver
      - name: constant-logical-expr
      - name: bool-literal-in-expr
      - name: redefines-builtin-id
      # Security
      - name: file-header
        disabled: true
      - name: imports-blocklist
        arguments:
          - "crypto/md5"
          - "crypto/sha1"
          - "crypto/rc4"

  # Stylecheck
  stylecheck:
    # Check all exported names
    checks: ["all", "-ST1003", "-ST1000"] # ST1003: MixedCaps, ST1000: package comments
    # Initialisms
    initialisms:
      [
        "ACL",
        "API",
        "ASCII",
        "CPU",
        "CSS",
        "DNS",
        "EOF",
        "GUID",
        "HTML",
        "HTTP",
        "HTTPS",
        "ID",
        "IP",
        "JSON",
        "QPS",
        "RAM",
        "RPC",
        "SLA",
        "SMTP",
        "SQL",
        "SSH",
        "TCP",
        "TLS",
        "TTL",
        "UDP",
        "UI",
        "UID",
        "UUID",
        "URI",
        "URL",
        "UTF8",
        "VM",
        "XML",
        "XMPP",
        "XSRF",
        "XSS",
        "CSV",
        "YAML",
      ]

  # Govet
  govet:
    # Enable all analyzers
    enable-all: true
    disable:
      - fieldalignment

  # Exhaustive
  exhaustive:
    # Check switch statements
    check:
      - switch
    # Check generated files
    check-generated: false
    # Default signifies exhaustive
    default-signifies-exhaustive: true

  # Errorlint
  errorlint:
    # Check error wrapping
    errorf: true
    # Check type assertions
    asserts: true
    # Check comparisons
    comparison: true

  # Gofumpt
  gofumpt:
    # Extra rules
    extra-rules: true

  # Gomodguard
  gomodguard:
    blocked:
      modules:
        - github.com/golang/protobuf:
            recommendations:
              - google.golang.org/protobuf
            reason: "Use google.golang.org/protobuf instead"
      versions:
        - github.com/sirupsen/logrus:
            version: "< 1.9.0"
            reason: "Security vulnerabilities in older versions"

  # Tagliatelle
  tagliatelle:
    case:
      rules:
        json: snake
        yaml: snake
        xml: camel
        env: upperSnake
        toml: snake

  # Funlen
  funlen:
    # Max function length
    lines: 100
    statements: 60

  # Nestif
  nestif:
    # Max nesting level
    min-complexity: 5

  # Cyclop
  cyclop:
    # Max cyclomatic complexity
    max-complexity: 15
    # Package average
    package-average: 0.0
    # Skip tests
    skip-tests: true

# Linters to enable
linters:
  enable:
    # Default linters (always enabled)
    - errcheck # Check for unchecked errors
    - gosimple # Simplify code
    - govet # Go vet
    - ineffassign # Detect ineffective assignments
    - staticcheck # Advanced static analysis
    - typecheck # Type checking
    - unused # Find unused code

    # Error handling
    - errorlint # Error wrapping and comparison
    # - wrapcheck # Check error wrapping
    - nilerr # Find code returning nil even with non-nil error

    # Security
    - gosec # Security scanner
    - copyloopvar # Check loop variable copies (replaces exportloopref)

    # Code quality and style
    - bodyclose # Check HTTP response body closure
    - dupl # Duplicate code detection
    # - gocognit # Cognitive complexity
    # - goconst # Find repeated constants
    - gocritic # Comprehensive linter
    - gocyclo # Cyclomatic complexity
    - gofmt # Check formatting
    - gofumpt # Stricter gofmt
    - goimports # Check imports
    #    - revive # Fast, configurable linter
    - misspell # Find misspellings
    - nakedret # Find naked returns
    # - prealloc # Find slice preallocation opportunities
    - unconvert # Remove unnecessary conversions
    - unparam # Find unused parameters
    - whitespace # Check for unnecessary whitespace
    - stylecheck # Replacement for golint

    # Testing
    # - usetesting # Use t.Setenv and other testing helpers
    # - testpackage # Check test package naming
    # - thelper # Detect test helpers without t.Helper()
    - tparallel # Check t.Parallel() usage

    # Performance
    # - prealloc # Find slice preallocation opportunities

    # Maintainability
    - funlen # Function length
    - nestif # Check deeply nested if statements
    - cyclop # Calculate cyclomatic complexity
    - maintidx # Maintainability index

    # Dependencies
    - gomodguard # Check blocked dependencies

    # Modern Go features
    - nilnil # Check for return of nil, nil
    - ireturn # Check interface returns
    - exhaustive # Check exhaustiveness of enum switches
    - forcetypeassert # Check force type assertions
    - wastedassign # Find wasted assignments
    - asciicheck # Check for non-ASCII identifiers
    - bidichk # Check for dangerous unicode character sequences
    - contextcheck # Check context.Context is passed correctly
    - durationcheck # Check for multiplications of time.Duration
    - makezero # Find slice append with non-zero length
    - noctx # Find HTTP requests without context.Context
    - predeclared # Find code shadowing predeclared identifiers
    - promlinter # Check Prometheus metrics naming
    - rowserrcheck # Check sql.Rows.Err()
    - sqlclosecheck # Check sql.Rows/Stmt Close() calls
    - grouper # Check for grouped imports
    - decorder # Check declaration order
    - tagliatelle # Check struct tag naming

  disable:
    # Too strict or opinionated
    - gochecknoglobals # Globals can be useful for constants
    - gochecknoinits # Init functions can be useful
    - lll # Line length can be handled by formatter
    - nlreturn # Too opinionated about newlines
    - wsl # Too opinionated about whitespace
    - testifylint # Only if using testify
    - paralleltest # Not always necessary
    - forbidigo # Too restrictive
    - varnamelen # Too opinionated about variable name length
    - depguard # Can be too restrictive
    - exhaustruct # Not all structs need all fields initialized
    - nonamedreturns # Named returns can be useful
    - tenv # Replaced by usetesting

# Issues configuration
issues:
  # Maximum issues to report
  max-issues-per-linter: 0
  max-same-issues: 0

  # Make issues output unique by line
  uniq-by-line: true

  # Exclude directories
  exclude-dirs:
    - vendor
    - third_party
    - testdata
    - examples
    - dist

  # Exclude files
  exclude-files:
    - ".*\\.pb\\.go$"
    - ".*\\.gen\\.go$"
    - "mock_.*\\.go$"
    - "_test.go$"

  # Include/exclude rules
  exclude-rules:
    # Exclude linters from test files
    - path: _test\.go
      linters:
        - dupl
        - gosec
        - goconst
        - funlen
        - gocognit
        - gocyclo
        - maintidx
        - wrapcheck
        - errorlint
        - forcetypeassert
        - nestif

    # Exclude specific directories
    - path: examples/
      linters:
        - gosec
        - errcheck
        - wrapcheck
        - exhaustive

    # Exclude main packages
    - path: cmd/
      linters:
        - gomnd
        - funlen

    # Exclude generated files
    - path: \.gen\.go
      linters:
        - stylecheck
        - revive
        - gocritic

    # Allow TODO comments
    - text: "TODO"
      linters:
        - godot
        - revive

  # Don't exclude default patterns
  exclude-use-default: false

  # Exclude specific messages
  exclude:
    # Allow TODO/FIXME comments
    - "^TODO:"
    - "^FIXME:"
    # Common test patterns
    - "^Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*print(f|ln)?|os\\.(Un)?Setenv). is not checked$"
    # Allow certain unused parameters in interfaces
    - "^unused parameter: 'ctx'$"

  # Fix found issues
  fix: false

# Severity
severity:
  # Set default severity
  default-severity: warning

  # Specific severities per linter
  rules:
    - linters:
        - gosec
      severity: error
    - linters:
        - dupl
      severity: info
    - linters:
        - stylecheck
        - revive
      severity: warning
